properties:


  - name: sprite
    type: ALLEGRO_BITMAP*
    init_with: nullptr
    exposed: true

  - name: model
    type: AllegroFlare::Model3D*
    init_with: nullptr
    exposed: true

  - name: type
    type: uint32_t
    init_with: TINS2025::Entity::ENTITY_TYPE_UNDEF
    exposed: true

  - name: animation_mode
    type: uint32_t
    init_with: TINS2025::Entity::ANIMATION_MODE_STANDING
    exposed: true

  - name: aabb2d
    type: AllegroFlare::Physics::AABB2D
    init_with: '{}'
    exposed: true

  - name: flags
    type: uint32_t
    init_with: 0
    exposed: true


enums:


  - name: Flags
    bitwise: true
    scope: public
    enumerators:
      - FLAG_NONE
      - FLAG_INACTIVE
      - FLAG_HIDDEN
      - FLAG_COLLIDES_WITH_PLAYER
      - FLAG_COLLIDES_WITH_TILEMAP


  - name: Type
    scope: public
    enumerators:
       - ENTITY_TYPE_UNDEF
       - ENTITY_TYPE_PLAYER
       - ENTITY_TYPE_FRIEND_1
       - ENTITY_TYPE_FRIEND_2
       - ENTITY_TYPE_FRIEND_3
       - ENTITY_TYPE_APPLE
       - ENTITY_TYPE_CARROT
       - ENTITY_TYPE_RED_CARROT
       - ENTITY_TYPE_DIALOG_TRIGGER_1
       - ENTITY_TYPE_DIALOG_TRIGGER_2
       - ENTITY_TYPE_DIALOG_TRIGGER_3
       - ENTITY_TYPE_BUNBUCKS_CAKE


  - name: AnimationMode
    scope: public
    enumerators:
       - ANIMATION_MODE_UNDEF
       - ANIMATION_MODE_STANDING
       - ANIMATION_MODE_WALKING_WOBBLY
       - ANIMATION_MODE_JUMPING_IN_EXCITEMENT


methods:


  - name: draw
    body: |
      // Draw the box
      al_draw_rectangle(
         aabb2d.get_x(),
         aabb2d.get_y(),
         aabb2d.get_x()+aabb2d.get_w(),
         aabb2d.get_y()+aabb2d.get_h(),
         ALLEGRO_COLOR{1, 1, 1, 1},
         1.0
      );

      // Draw the sprite (bottom centered)
      if (sprite)
      {
         ALLEGRO_BITMAP *bitmap = sprite;

         float center_x = aabb2d.get_x() + aabb2d.get_w() / 2.0f;
         float center_y = aabb2d.get_y() + aabb2d.get_h() / 2.0f;

         float bitmap_w = al_get_bitmap_width(bitmap);
         float bitmap_h = al_get_bitmap_height(bitmap);

         float draw_x = center_x - bitmap_w / 2.0f;
         float draw_y = center_y - bitmap_h;

         al_draw_bitmap(bitmap, draw_x, draw_y, 0);
      }
    body_dependency_symbols:
      - al_draw_rectangle


dependencies:


  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::Physics::AABB2D
    headers: [ AllegroFlare/Physics/AABB2D.hpp ]
  - symbol: al_draw_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: AllegroFlare::Model3D
    headers: [ AllegroFlare/Model3D.hpp ]


